<!-- question-type: prepare -->
### Exercise 2: Combining Datasets

In this exercise, we'll combine two or more data frames using joins. Sometimes, joining adds columns. Other times, it adds rows â€” especially when your second table includes multiple observations per firm.

Let's walk through both situations.

To start, let's load the necessary data for this exercise:

```{r}
firm_codes <- 
    read_csv("data/asx_200_2024.csv") |> 
    select(gvkey, conm, gsubind)

subindustry_names <-
    read_csv("data/GICS_subindustry.csv")

pe_data <- 
    read_csv("data/pe.csv") |> 
    select(gvkey, fyear, pe) |>
    filter(!is.na(pe)) |> 
    arrange(gvkey, fyear)
```

**(a)**. **Attaching industry labels** 
We start with a data frame that lists each firm's code and subindustry, using the largest 200 firms on the ASX in 2024:

```{r}
firm_codes |> head(10)
```

We also have a lookup table that tells us the name of each subindustry:

```{r}
subindustry_names |> head(10)
```

Use a left join to add the subindustry name to each firm in the `firm_codes` dataset using the variable `gsubind` as the common identifier shared by both tables. Fill in the blanks:

```{r}
#| eval: false
firm_info <- 
  YOUR_DATASET_NAME |>
  left_join(YOUR_DATASET_NAME, by = "YOUR_VARIABLE_NAME")

firm_info |> head(10)
```


**(b).** What kind of join did we just perform? Answer the following:

* What kind of thing are we adding: columns or rows?
* Did each `gsubind` only appear once in the dataset `subindustry_names`?
* Does this kind of join have a name? If so, what is it?

**(c)**. Attach time-varying data to our firms

Now let's bring in PE ratio data, which has multiple years per firm:

```{r}
#| eval: false

pe_data |> head(10)
```

Use a left join to add the Price/earnings data to each firm in the `firm_codes` dataset using the variable `gvkey` as the common identifier shared by both tables. Fill in the blanks:

```{r}
#| eval: false
firm_pe_data <- 
  YOUR_DATASET_NAME |>
  YOUR_JOIN_TYPE_join(YOUR_DATASET_NAME, by = "YOUR_VARIABLE_NAME")

firm_pe_data |> head(10)
```

**(d).** What kind of join did we just perform? Answer the following:

* What kind of thing are we adding: columns or rows?
* How many rows are in the dataset `firm_pe_data`? How about `firm_info`?
* Does each `gvkey` in the original table (`firm_info`) now appear once or multiple times? Why?
* Does this kind of join have a name? If so, what is it?

<!-- BEGIN PROFILE:r-teaching-guide -->
::: {.content-visible when-profile="r-teaching-guide"}

::: {.teaching-block}

::: {.teaching-block-header}
Teaching Note
:::

::: {.teaching-block-body}

ðŸŽ¯ **Learning Objective** 
Students should:

- XXXXX

âœ…   **Core Concepts to Highlight**

List them here


ðŸ’¬ **Suggested In-Class Prompts** (if needed)

List as needed

ðŸ“Œ **Common Misunderstandings**

List as needed

:::

:::

:::
<!-- END PROFILE:r-teaching-guide -->

<!-- BEGIN PROFILE:r-solutions -->
::: {.content-visible when-profile="r-solutions" when-profile="r-teaching-guide"}

::: {.solution-block}

::: {.solution-block-header}
Solution
:::

::: {.solution-block-body}

**(a). **

```{r}
firm_info <- 
  firm_codes |>
  left_join(subindustry_names, by = "gsubind")
```

**(b).** Model Answers:

What kind of thing are we adding?

* Columns â€” we're adding a column with the subindustry name.

Did each gsubind only appear once in subindustry_names?

* Yes â€” this is what makes it safe to use as a lookup table.

Does this kind of join have a name?

* Yes â€” itâ€™s often called a many-to-one join, because many firms share the same subindustry code, but each code maps to one label.

**(c).**

```{r}
firm_pe_data <- 
  firm_codes |>
  left_join(pe_data, by = "gvkey")
```

**(d). ** 
What kind of thing are we adding?

* Rows (mainly) â€” each firm now appears once for each year of data available.
* Note also the PE column is added

How many rows are in `firm_pe_data`? How about `firm_codes`?

```{r}
firm_pe_data |> nrow()
firm_codes |> nrow()
```

Does each gvkey in firm_info appear once or multiple times now? Why?

* Multiple times â€” once per year of PE data available for that firm.

Does this kind of join have a name?
Yes â€” it's a one-to-many join, because one firm matches to many years in the `pe_data` table.

:::

:::

:::
<!-- END PROFILE:r-solutions -->